#!/bin/bash

# Array of metric names (example with a few expand as needed)
metrics=(
    "DRB.UEThpDl"
    "DRB.UEThpUl"
    "DRB.RlcPacketDropRateDl"
    "DRB.RlcSduTransmittedVolumeDL"
    "DRB.RlcSduTransmittedVolumeUL"
    "CQI"
    "RSRP"
    "RSRQ"
    "RRU.PrbAvailDl"
    "RRU.PrbAvailUl"
    "RRU.PrbTotDl"
    "RRU.PrbTotUl"
    "DRB.RlcSduDelayDl"
    "DRB.AirIfDelayUl"
    "DRB.RlcDelayUl"
    "RACH.PreambleDedCell"
    "DRB.AirIfDelayDl"
    "DRB.AirIfDelayDist"
    "DRB.PdcpReordDelayUl"
    "DRB.DelayDlNgranUeDist"
    "DRB.DelayUlNgranUeDist"
    "DRB.DelayUlNgranUeIncD1Dist"
    "GTP.DelayDlPsaUpfNgranMean"
    "GTP.DelayDlPsaUpfNgranDist"
    "RRU.PrbTotDlDist"
    "RRU.PrbTotUlDist"
    "RRU.PrbUsedDl"
    "RRU.PrbUsedUl"
    "RRU.MaxPrbUsedDl"
    "RRU.MaxPrbUsedUl"
    "RRU.PrbTotDlMimo"
    "RRU.PrbTotUlMimo"
    "RRU.PrbTotSdmDl"
    "RRU.PrbTotSdmUl"
    "DRB.UEThpDlDist"
    "DRB.UEThpUlDist"
    "DRB.UEUnresVolDl"
    "DRB.UEUnresVolUl"
    "DRB.PDCP.UEThpDl"
    "RRC.ConnMean"
    "RRC.ConnMax"
    "RRC.InactiveConnMean"
    "RRC.InactiveConnMax"
    "SM.PDUSessionSetupReq"
    "SM.PDUSessionSetupSucc"
    "SM.PDUSessionSetupFail"
    "SM.MeanPDUSessionSetupReq"
    "SM.MaxPDUSessionSetupReq"
    "MM.HoPrepInterReq"
    "MM.HoPrepInterSucc"
    "MM.HoPrepInterFail"
    "MM.HoResAlloInterReq"
    "MM.HoResAlloInterSucc"
    "MM.HoResAlloInterFail"
    "MM.HoExeInterReq"
    "MM.HoExeInterSucc"
    "MM.HoExeInterFail"
    "MM.HoExeInterReq.TimeMean"
    "MM.HoExeInterReq.TimeMax"
    "MM.HoExeInterSSBSucc"
    "MM.HoExeInterSSBFail"
    "MM.HoExeIntraReq"
    "MM.HoExeIntraSucc"
    "MM.HoOut5gsToEpsPrepReq"
    "MM.HoOut5gsToEpsPrepSucc"
    "MM.HoOut5gsToEpsPrepFail"
    "MM.HoIncEpsTo5gsResAlloReq"
    "MM.HoIncEpsTo5gsResAlloSucc"
    "MM.HoIncEpsTo5gsResAlloFail"
    "MM.HoOutExe5gsToEpsReq"
    "MM.HoOutExe5gsToEpsSucc"
    "MM.HoOutExe5gsToEpsFail"
    "MM.HoOut5gsToEpsFallbackPrepReq"
    "MM.HoOut5gsToEpsFallbackPrepSucc"
    "MM.HoOut5gsToEpsFallbackPrepFail"
    "MM.HoOutExe5gsToEpsFallbackSucc"
    "MM.HoOutExe5gsToEpsFallbackFail"
    "MM.Ho5gsToEpsFallbackTimeMean"
    "MM.HoExeHo5gsToEpsFallbackTimeMean"
    "MM.Redirection.5gsToEpsFallback"
    "MM.HoExeIntraFreqReq"
    "MM.HoExeIntraFreqSucc"
    "MM.HoExeInterFreqReq"
    "MM.HoExeInterFreqSucc"
    "MM.ChoPrepInterReq"
    "MM.ChoPrepInterSucc"
    "MM.ChoPrepInterFail"
    "MM.ChoResAlloInterReq"
    "MM.ChoResAlloInterSucc"
    "MM.ChoResAlloInterFail"
    "MM.ConfigInterReqCho"
    "MM.ConfigInterReqChoUes"
    "MM.ChoExeInterSucc"
    "MM.ChoExeInterReq.TimeMean"
    "MM.ChoExeInterReq.TimeMax"
    "MM.ChoPrepInterReqUes"
    "MM.ChoPrepInterSuccUes"
    "MM.ChoPrepInterFailUes"
    "MM.ConfigIntraReqCho"
    "MM.ConfigIntraReqChoUes"
    "MM.ChoExeIntraSucc"
    "MM.DapsHoPrepInterReq"
    "MM.DapsHoPrepInterSucc"
    "MM.DapsHoPrepInterFail"
    "MM.DapsHoResAlloInterReq"
    "MM.DapsHoResAlloInterSucc"
    "MM.DapsHoResAlloInterFail"
    "MM.DapsHoExeInterReq"
    "MM.DapsHoExeInterSucc"
    "MM.DapsHoExeInterFail"
    "MM.DapsHoExeIntraReq"
    "MM.DapsHoExeIntraSucc"
    "TB.TotNbrDlInitial"
    "TB.IntialErrNbrDl"
    "TB.TotNbrDl"
    "TB.ErrTotNbrDl"
    "TB.ResidualErrNbrDl"
    "TB.TotNbrUlInit"
    "TB.ErrNbrUlInitial"
    "TB.TotNbrUl"
    "TB.ErrTotNbrUl"
    "TB.ResidualErrNbrUl"
    "DRB.EstabAtt"
    "DRB.EstabSucc"
    "DRB.RelActNbr"
    "DRB.SessionTime"
    "DRB.InitialEstabAtt"
    "DRB.InitialEstabSucc"
    "DRB.ResumeAtt"
    "DRB.ResumeSucc"
    "DRB.MeanEstabSucc"
    "DRB.MaxEstabSucc"
    "DRB.GTPUPathFailure"
    "DRB.EstabAttDC"
    "DRB.EstabSuccDC"
    "CARR.WBCQIDist"
    "CARR.PDSCHMCSDist"
    "CARR.PUSCHMCSDist"
    "CARR.MUPDSCHMCSDist"
    "CARR.MUPUSCHMCSDist"
    "QF.RelActNbr"
    "QF.ReleaseAttNbr"
    "QF.SessionTimeQoS"
    "QF.SessionTimeUE"
    "QF.EstabAttNbr"
    "QF.EstabSuccNbr"
    "QF.EstabFailNbr"
    "QF.InitialEstabAttNbr"
    "QF.InitialEstabSuccNbr"
    "QF.InitialEstabFailNbr"
    "QF.ModNbrAtt"
    "QF.ModNbrSucc"
    "QF.ModNbrFail"
    "RRC.ConnEstabAtt"
    "RRC.ConnEstabSucc"
    "RRC.ConnEstabFailCause"
    "UECNTX.ConnEstabAtt"
    "UECNTX.ConnEstabSucc"
    "RRC.ReEstabAtt"
    "RRC.ReEstabSuccWithUeContext"
    "RRC.ReEstabSuccWithoutUeContext"
    "RRC.ReEstabFallbackToSetupAtt"
    "RRC.ResumeAtt"
    "RRC.ResumeSucc"
    "RRC.ResumeSuccByFallback"
    "RRC.ResumeFollowedbyNetworkRelease"
    "RRC.ResumeFollowedbySuspension"
    "RRC.ResumeFallbackToSetupAtt"
    "PEE.AvgPower"
    "PEE.MinPower"
    "PEE.MaxPower"
    "PEE.Energy"
    "PEE.AvgTemperature"
    "PEE.MinTemperature"
    "PEE.MaxTemperature"
    "PEE.Voltage"
    "PEE.Current"
    "PEE.Humidity"
    "RACH.PreambleACell"
    "RACH.PreambleBCell"
    "RACH.PreambleDed"
    "RACH.PreambleA"
    "RACH.PreambleB"
    "RACH.PreambleDist"
    "RACH.AccessDelayDist"
    "MR.IntraCellSSBSwitchReq"
    "MR.IntrCellSuccSSBSwitch"
    "L1M.SS-RSRP"
    "L1M.SS-RSRPNrNbr"
    "L1M.RSRPEutraNbr"
    "MR.NRScSRSRSRP"
    "DRB.MeanActiveUeDl"
    "DRB.MaxActiveUeDl"
    "DRB.MeanActiveUeUl"
    "DRB.MaxActiveUeUl"
    "5QI1QoSflow.Rel.Average.NormCallDuration"
    "5QI1QoSflow.Rel.Average.AbnormCallDuration"
    "5QI1QoSflow.Rel.NormCallDuration"
    "5QI1QoSflow.Rel.AbnormCallDuration"
    "HO.IntraSys.TooEarly"
    "HO.IntraSys.TooLate"
    "HO.IntraSys.ToWrongCell"
    "HO.InterSys.TooEarly"
    "HO.InterSys.TooLate"
    "HO.InterSys.Unnecessary"
    "HO.InterSys.PingPong"
    "HO.IntraSys.bTooEarly.NCI"
    "HO.IntraSys.bTooLate.NCI"
    "HO.IntraSys.bToWrongCell.NCI"
    "HO.InterSys.bTooLate.ECGI"
    "HO.InterSys.bUnnecessary.ECGI"
    "HO.InterSys.bPingPong.NCI"
    "L1M.PHR1"
    "PAG.ReceivedNbrCnInitiated"
    "PAG.ReceivedNbrRanIntiated"
    "PAG.ReceivedNbr"
    "PAG.DiscardedNbrCnInitiated"
    "PAG.DiscardedNbrRanInitiated"
    "PAG.DiscardedNbr"
    "L1M.SSBBeamRelatedUeNbr"
    "CARR.MaxTxPwr"
    "CARR.NRCellDU"
    "CARR.MUPDSCHRB"
    "CARR.MUPUSCHRB"
    "RRU.MaxLayerDlMimo"
    "RRU.MaxLayerUlMimo"
    "CARR.AverageLayersDl"
    "CARR.AverageLayersUl"
    "MIMOLayersDLy"
    "MIMOLayersULy"
    "PDSCHPRBsLayer"
    "PUSCHPRBsLayer"
    "MR.NRScSSRSRQ"
    "MR.SS-RSRQPerSSB"
    "MR.SS-RSRQ"
    "MR.NRScSSSINR"
    "MR.SS-SINRPerSSB"
    "MR.SS-SINR"
    "L1M.ATADist"
    "GTP.InDataPktPacketLossN3gNB"
    "DRB.PacketLossRateUu"
    "DRB.PdcpSduVolumeDL"
    "DRB.PdcpSduVolumeX2DL"
    "DRB.PdcpSduVolumeXnDL"
    "DRB.PdcpSduVolumeUL"
    "DRB.PdcpSduVolumeX2UL"
    "DRB.PdcpSduVolumeXnUL"
    "DRB.PacketSuccessRateUlgNBUu"
    "MeanTime5QI1Flow.RelDoubleNG"
    "DRB.PacketLossRateUl"
    "DRB.F1UpacketLossRateUl"
    "DRB.F1UpacketLossRateDl"
    "DRB.PdcpPacketDropRateDl"
    "DRB.PdcpSduDelayDl"
    "DRB.PdcpF1DelayDl"
    "DRB.PdcpSduDelayDlDist"
    "DRB.GtpF1DelayDlDist"
    "DRB.RlcSduDelayDlDist"
    "DRB.RlcSduLatencyDl"
    "DRB.RlcSduLatencyDlDist"
    "UECNTX.RelReq"
    "UECNTX.RelCmd"
    "QosFlow.PdcpPduVolumeDL"
    "QosFlow.PdcpPduVolumeUL"
    "QosFlow.PdcpSduVolumeDl"
    "QosFlow.PdcpSduVolumeUl"
    "DRB.F1uPdcpSduVolumeDL"
    "DRB.X2uPdcpSduVolumeDl"
    "DRB.XnuPdcpSduVolumeDl"
    "DRB.F1uPdcpSduVolumeUL"
    "DRB.X2uPdcpSduVolumeUl"
    "DRB.XnuPdcpSduVolumeUl"
    "MM.HoPrepIntraReq"
    "MM.HoPrepIntraSucc"
    "MM.ChoPrepIntraReq"
    "MM.ChoPrepIntraSucc"
    "MM.DapsHoPrepIntraReq"
    "MM.DapsHoPrepIntraSucc"
    "MM.ChoPrepIntraReqUes"
    "MM.ChoPrepIntraSuccUes"
    "VR.VCpuUsageMean"
    "VR.VMemoryUsageMean"
    "VR.VDiskUsageMean"
    "DRB.PerDataVolumeDLDist"
    "DRB.PerDataVolumeULDist"
    "DRB.RlcPacketDropRateDLDist"
    "DRB.PacketLossRateULDist"
    "L1M.DL-SS-RSRP"
    "L1M.DL-SS-SINR"
    "L1M.UL-SRS-RSR"
)

# Define the string to check for in the output
expected_output="RIC Indication Received from gnbd_001_001_00019b_0 for Subscription ID"  # <- Change this to the actual line/string you want to match

log_success="supported_metrics.log"
log_fail="unsupported_metrics.log"
> "$log_success"
> "$log_fail"

xapp_script="./kpm_mon_xapp.py"

for metric in "${metrics[@]}"; do
  echo "Checking metric: $metric"

  # Run xApp, let it run for a short time (e.g., 5 seconds) to get indications, then kill it
  # This assumes kpm_mon_xapp.py runs indefinitely until killed
  timeout 15s "$xapp_script" --metrics="$metric" --kpm_report_style=5 > temp_output.log 2>&1

  if grep -q "$expected_output" temp_output.log; then
    echo "$metric" >> "$log_success"
    echo "✅ Supported: $metric"
  elif grep -q "ricxappframe.subsclient.rest.ApiException: (503)" temp_output.log; then
    echo "❌ error: $metric"
    exit 1
  else
    echo "$metric" >> "$log_fail"
    echo "❌ failed: $metric"
    echo "Output snippet:"
    head -40 temp_output.log
    echo "-----"
  fi
done

rm temp_output.log
echo "✅ Finished. See '$log_success' and '$log_fail' for results."
